datasource sqlite {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-arm64-openssl-3.0.x", "darwin-arm64", "debian-openssl-3.0.x", "windows", "native"]
}

model User {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  email          String?
  password       String
  first_name     String?
  last_name      String?
  role           Int       @default(0)
  email_verified Boolean   @default(false)
  is_active      Boolean   @default(true)
  last_login     DateTime?
  created_at     DateTime  @default(now())
  deleted_at     DateTime?
  access_token   String?
  updated_at     DateTime? @updatedAt

  knowledgeBases KnowledgeBase[]
}

model KnowledgeBase {
  id          Int                 @id @default(autoincrement())
  name        String              @unique
  embedding   String?
  description String?
  created     DateTime?
  updated     DateTime?
  is_public   Boolean             @default(true)
  user        User?               @relation(fields: [user_id], references: [id])
  user_id     Int?
  files       KnowledgeBaseFile[] @relation("Files")
}

model KnowledgeBaseFile {
  id              Int           @id @default(autoincrement())
  url             String
  knowledgeBase   KnowledgeBase @relation("Files", fields: [knowledgeBaseId], references: [id], onDelete: Cascade)
  knowledgeBaseId Int
}

model Instruction {
  id          Int    @id @default(autoincrement())
  name        String @unique
  instruction String
}

model Stock {
  stock_id Int    @id @unique
  name     String
}

model StockPrice {
  id               Int    @id @default(autoincrement())
  Trading_Volume   Int
  Trading_money    BigInt
  Trading_turnover Int
  close            Float
  date             String
  max              Float
  min              Float
  open             Float
  spread           Float
  stock_id         Int
}

model StockNew {
  id       Int    @id @default(autoincrement())
  date     String
  link     String
  source   String
  stock_id Int
  title    String
}

model StockNews {
  id       Int    @id @default(autoincrement())
  stock_id Int
  date     String
  source   String
  title    String
  content  String
}
